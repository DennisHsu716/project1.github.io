#include <OneWire.h>
 int DS18S20_Pin = 2; //DS18S20 Signal pin on digital pin 2
 //Temperature chip i/o
OneWire ds(DS18S20_Pin);  // on digital pin 2
 
 
 void setup(void) {
  pinMode(6, OUTPUT);//relay
  pinMode(8, OUTPUT);//relay
  Serial.begin(9600);
}   
 
 
 
 
 void loop(void) {
  float temperature = getTemp();
  Serial.println(temperature);  
  delay(500); //to slow down the output so it is easier to read
   if( temperature <= 24 ){   
    digitalWrite(6,LOW); //relay
    digitalWrite(8,HIGH);//relay
    digitalWrite(4,HIGH);
    digitalWrite(5,LOW);
    digitalWrite(7,LOW);
    delay(100);
   
    }
    else if ( 24 < temperature && temperature <= 26 ){
    digitalWrite(6,HIGH); //relay
    digitalWrite(8,HIGH); //relay
    digitalWrite(4,LOW);
    digitalWrite(5,HIGH);
    digitalWrite(7,LOW);
    delay(100);
    }
    else if ( 26 <= temperature ){
    digitalWrite(6,HIGH); //HOT
    digitalWrite(8,LOW);  
    digitalWrite(4,LOW);
    digitalWrite(5,LOW);
    digitalWrite(7,HIGH);
    delay(100);
    }
  delay(1000);  

   
} 
float getTemp(){
  //returns the temperature from one DS18S20 in DEG Celsius 
  byte data[12];
  byte addr[8];
  if ( !ds.search(addr)) {
      //no more sensors on chain, reset search
      ds.reset_search();
      return -1000;
  } 
  if ( OneWire::crc8( addr, 7) != addr[7]) {
      Serial.println("CRC is not valid!");
      return -1000;
  }
  if ( addr[0] != 0x10 && addr[0] != 0x28) {
      Serial.print("Device is not recognized");
      return -1000;
  }
  ds.reset();
  ds.select(addr);
  ds.write(0x44,1); // start conversion, with parasite power on at the end
  byte present = ds.reset();
  ds.select(addr);    
  ds.write(0xBE); // Read Scratchpad   
  for (int i = 0; i < 9; i++) { // we need 9 bytes
    data[i] = ds.read();
  }
  ds.reset_search();   
  byte MSB = data[1];
  byte LSB = data[0];
  float tempRead = ((MSB << 8) | LSB); //using two's compliment
  float TemperatureSum = tempRead / 16;
  return TemperatureSum;  
}
